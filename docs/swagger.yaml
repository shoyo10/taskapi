basePath: /
definitions:
  errors.HTTPError:
    properties:
      code:
        type: string
      message: {}
    type: object
  http.createTaskReq:
    properties:
      name:
        maxLength: 32
        minLength: 1
        type: string
      status:
        enum:
        - 0
        - 1
        type: integer
    type: object
  http.createTaskResp:
    properties:
      data:
        $ref: '#/definitions/http.createTaskRespData'
    type: object
  http.createTaskRespData:
    properties:
      id:
        type: integer
    type: object
  http.listTaskResp:
    properties:
      data:
        items:
          $ref: '#/definitions/http.listTaskRespData'
        type: array
    type: object
  http.listTaskRespData:
    properties:
      id:
        type: integer
      name:
        type: string
      status:
        $ref: '#/definitions/model.EnumTaskStatus'
    type: object
  http.updateTaskReq:
    properties:
      name:
        maxLength: 32
        minLength: 1
        type: string
      status:
        enum:
        - 0
        - 1
        type: integer
    type: object
  model.EnumTaskStatus:
    enum:
    - 0
    - 1
    type: integer
    x-enum-varnames:
    - TaskStatusIncomplete
    - TaskStatusCompleted
host: localhost:9090
info:
  contact:
    name: Shoyo
    url: https://github.com/shoyo10/taskapi
  description: This is task api document.
  title: Task API Document
  version: "1.0"
paths:
  /tasks:
    get:
      description: list all tasks
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/http.listTaskResp'
    post:
      description: create a task
      parameters:
      - description: task fields
        in: body
        name: reqBody
        required: true
        schema:
          $ref: '#/definitions/http.createTaskReq'
      responses:
        "200":
          description: task id
          schema:
            $ref: '#/definitions/http.createTaskResp'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.HTTPError'
  /tasks/{id}:
    delete:
      description: delete a task
      parameters:
      - description: task id
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.HTTPError'
    put:
      description: update a task
      parameters:
      - description: task id
        in: path
        name: id
        required: true
        type: integer
      - description: update task fields
        in: body
        name: reqBody
        required: true
        schema:
          $ref: '#/definitions/http.updateTaskReq'
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.HTTPError'
swagger: "2.0"
